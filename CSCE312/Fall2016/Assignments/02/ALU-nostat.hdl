// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU-nostat.hdl

/**
 * The ALU (Arithmetic Logic Unit).
 * Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs, 
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 * In addition, the ALU computes two 1-bit outputs:
 */

// Implementation: the ALU logic manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) set x = 0        // 16-bit constant
// if (nx == 1) set x = !x       // bitwise not
// if (zy == 1) set y = 0        // 16-bit constant
// if (ny == 1) set y = !y       // bitwise not
// if (f == 1)  set out = x + y  // integer 2's complement addition
// if (f == 0)  set out = x & y  // bitwise and
// if (no == 1) set out = !out   // bitwise not

CHIP ALU-nostat {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output?

    OUT 
        out[16]; // 16-bit output

    PARTS:
    Mux16(a=x,b=false,sel=zx,out=xA);
    Not16(in=xA,out=notX);
    Mux16(a=xA,b=notX,sel=nx,out=xB);
    
    Mux16(a=y,b=false,sel=zy,out=yA);
    Not16(in=yA,out=notY);
    Mux16(a=yA,b=notY,sel=ny,out=yB);
    
    Add16(a=xB,b=yB,out=ABAddition);
    And16(a=xB,b=yB,out=ABAnd);
    
    Mux16(a=ABAnd,b=ABAddition,sel=f,out=outa);
    Not16(in=outa,out=outb);
    Mux16(a=outa,b=outb,sel=no,out=out);
}